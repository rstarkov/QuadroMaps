- ways.dat should be geospatially sorted despite not being geospatially indexed
- quadtree leaf items can be sorted and diff-encoded. And/or maybe lz4'd?
  - lookups can then binary search, though we subdivide enough that it probably isn't worth

- given a Way, it's expensive-ish to filter its nodes list by tag (must query those separately and intersect)

- way.tag.* are 20% of the data and are highly compressible; can the storage be improved?


Maybe:

- what if nodes stored a list of ways and rels they're a member of, and ways were just a by-ID database
  - ways to also store a list of rels they're a member of

- encoding node IDs instead of coords approximately triples the data size, and vastly slows down the type
  of query that this library is built for

- should we have an extra file for each tagname to find entities that have that tag regardless of value?
  this could be optional and depend on application; just expose as optional tools
